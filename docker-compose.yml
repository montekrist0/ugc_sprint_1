version: '3.5'

services:
  #  nginx:
  #    image: nginx:latest
  #    volumes:
  #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #      - ./nginx/configs:/etc/nginx/conf.d:ro
  #    ports:
  #      - "8000:8000"

  kafka-zookeeper:
    image: bitnami/zookeeper:3.7.1
    hostname: kafka-zookeeper
    container_name: kafka-zookeeper
    expose:
      - 2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 10s

  kafka:
    image: bitnami/kafka:3.3.2
    hostname: kafka
    container_name: kafka
    expose:
      - 9092
    ports:
      - "9092:9092"
    env_file:
      - .env
    volumes:
      - ./kafka/data:/bitnami
    environment:
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka-zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:29092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_CREATE_TOPICS="view:1:1"
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      kafka-zookeeper:
        condition: service_healthy

  init-kafka:
    image: bitnami/kafka:3.3.2
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics.sh --bootstrap-server kafka:29092 --list
      echo -e 'Creating kafka topics'
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic view --replication-factor 1 --partitions 2
      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server kafka:29092 --list
      "
    depends_on:
      - kafka

  click-zookeeper:
    image: zookeeper:3.5
    container_name: click-zookeeper
    hostname: click-zookeeper

  clickhouse-node1:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    env_file:
      - .env
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse/data/node1:/etc/clickhouse-server
      - ./clickhouse/init_db/init_shard1.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - click-zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhouse/data/node2:/etc/clickhouse-server
    depends_on:
      - click-zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    env_file:
      - .env
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./clickhouse/data/node3:/etc/clickhouse-server
      - ./clickhouse/init_db/init_shard2.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - click-zookeeper


  clickhouse-node4:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhouse/data/node4:/etc/clickhouse-server
    depends_on:
      - click-zookeeper
